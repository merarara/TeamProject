<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.springboot.member.UserMapper">


    <!--  회원가입 일반 -->
    <insert id="insertUser" 
    	parameterType="com.project.springboot.member.UserDTO">
        INSERT INTO USER_INFO
        (u_num, u_id, u_pw, u_name, u_nick, u_phone, u_email, u_zip, u_addr1, u_addr2, u_type)
        VALUES(seq_user_num.nextval,#{u_id},#{u_pw},#{u_name},#{u_nick},#{u_phone},
        		#{u_email},#{u_zip},#{u_addr1},#{u_addr2},'일반')
    </insert>    
    <!-- 회원정보 수정 -->
	<update id="updateUser" parameterType="com.project.springboot.member.UserDTO">
	   <choose>
			<when test = "#{u_pw} != null">
				UPDATE USER_INFO SET
			    u_pw = #{u_pw},
			    u_nick = #{u_nick},
			    u_phone = #{u_phone},
			    u_email = #{u_email},
			    u_zip = #{u_zip},
			    u_addr1 = #{u_addr1},
			    u_addr2 = #{u_addr2}
			    WHERE u_id = #{u_id}
			</when>
			<otherwise>
				UPDATE USER_INFO SET
				    u_nick = #{u_nick},
				    u_phone = #{u_phone},
				    u_email = #{u_email},
				    U_Zip = #{u_zip},
				    u_addr1 = #{u_addr1},
				    u_addr2 = #{u_addr2}
				    WHERE u_id = #{u_id}
			</otherwise>
		</choose>
	</update>

    <!-- 회원탈퇴 -->
	<delete id="deleteUser" parameterType="String">
	    DELETE FROM USER_INFO WHERE u_id = #{u_id}
	</delete>
	<!-- 아이디로 회원 검색 -->
	<select id="selectOne" resultType="com.project.springboot.member.UserDTO">
		SELECT * FROM USER_INFO WHERE u_id = #{param1}
	</select>
	
	<!-- 전체조회 (페이징 처리) -->
	<select id="selectAll" resultType="com.project.springboot.member.UserDTO">
	   SELECT * FROM ( SELECT ROWNUM RN, A.*
        FROM (
            SELECT *
            FROM USER_INFO
            WHERE u_authority IN ('ROLE_BLACKLIST', 'ROLE_USER')
            ORDER BY u_id DESC
        ) A
        WHERE ROWNUM &lt;= #{arg0} + #{arg1}
    ) WHERE RN &gt; #{arg0} 
	</select>

	<!-- 전체 회원 수 조회 -->
	<select id="selectTotalCount" resultType="int">
	  SELECT COUNT(*) FROM USER_INFO WHERE u_authority IN ('ROLE_BLACKLIST', 'ROLE_USER')
	</select>
	
	<select id="selectUserlist" resultType="com.project.springboot.member.UserDTO">
	  SELECT * FROM ( SELECT ROWNUM RN, A.*
	    FROM (
	      SELECT *
	      FROM USER_INFO
	      WHERE u_authority = 'ROLE_USER'
	      ORDER BY u_id DESC
	    ) A
	    WHERE ROWNUM &lt;= #{arg0} + #{arg1}
	  ) WHERE RN &gt; #{arg0}
	</select>
	<!--  일반 전체조회 -->
	<select id="selectUserCount" resultType="int">
	  SELECT COUNT(*) FROM USER_INFO WHERE u_authority ('ROLE_USER')
	</select>

	<!-- 블랙리스트 페이징처리 -->
	<select id="selectBlacklist" resultType="com.project.springboot.member.UserDTO">
		  SELECT * FROM ( SELECT ROWNUM RN, A.*
		    FROM (
		      SELECT *
		      FROM USER_INFO
		      WHERE u_authority = 'ROLE_BLACKLIST'
		      ORDER BY u_id DESC
		    ) A
		    WHERE ROWNUM &lt;= #{arg0} + #{arg1}
		  ) WHERE RN &gt; #{arg0}
	</select>
	<!-- 블랙 전체조회 -->
	<select id="selectBlackCount" resultType="int">
	  SELECT COUNT(*) FROM USER_INFO WHERE u_authority ('ROLE_BLACKLIST')
	</select>
	
	<!-- 검색 및 페이징 -->
	<!-- 아이디로 회원 검색 -->
	<select id="searchById" parameterType="java.lang.String" resultType="com.project.springboot.member.UserDTO">
	    SELECT *
	    FROM (SELECT ROW_NUMBER() OVER (ORDER BY u_num DESC) RN, u_num, u_id, u_name, u_email, u_address, u_enabled, u_authority
	          FROM user_info
	          WHERE u_id LIKE '%' || #{searchId} || '%'
	          ORDER BY u_num DESC)
	    WHERE RN BETWEEN #{start} AND #{end}
	</select>


	<!-- 아이디 조회 -->
	<select id="selectSearchIdCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM user_info WHERE u_id LIKE '%' || searchId || '%'
	</select>



	<!-- 권한 업데이트 -->
	<update id="updateAuthority">
	    UPDATE USER_INFO SET u_authority = #{param2} WHERE u_id = #{param1}
	</update>
	
	
	

   
</mapper> 