<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.project.springboot.pmservice.PManagerDao">
	<!-- 상품 페이지설정 -->
	<select id="articleMPageDao" resultType="_int">
		select count(*) as total from product_list
			<if test="searchWord != null and searchWord != ''">
				where upper(${searchField}) like '%${searchWord.toUpperCase()}%'
			</if>
	</select>
	
	<!-- 상품 목록 -->
	<select id="searchPlistDao"
		resultType="com.project.springboot.productdto.ProductlistDTO">
		select * 
		  from (
		  		select rownum num, A.*
		  		  from (
		  		  		select *
		  		  		  from product_list
		  		  		  <if test="searchWord != null and searchWord != ''">
		  		  		  	where upper(${searchField}) like '%${searchWord.toUpperCase()}%'
		  		  		  </if>
		  		  		) A
		  		  where rownum <![CDATA[<=]]> #{nEnd} ) B
		  where B.num <![CDATA[>=]]> #{nStart} 
	</select>
	
	<!-- 상품 갯수 -->
	<select id="searchPcountDao"
		resultType="com.project.springboot.productdto.PCountDTO">
		select * from p_count
			where p_sold = 'N'
	</select> 
	
	<!-- 상품 재고 삭제 -->
	<delete id="deleteCountDao">
		delete from p_count
		 where p_barcode = #{param1}
	</delete>
	
	<!-- 상품 재고량 변경시 업데이트 -->
	<update id="updateCountDao">
		UPDATE product_list
			SET p_count = (
			    SELECT A.cnt - NVL(B.cnt, 0) AS p_count
			    FROM 
			        (SELECT p_num, COUNT(*) cnt 
			         FROM p_count 
			         GROUP BY p_num) A 
			        LEFT OUTER JOIN 
			        (SELECT p_num, COUNT(*) cnt 
			         FROM p_count 
			         WHERE p_sold = 'Y' 
			         GROUP BY p_num) B 
			        ON A.p_num = B.p_num 
			    WHERE A.p_num = product_list.p_num
			)
		 WHERE p_num = #{param1}
	</update>
	
	<!-- 바코드 번호 가져오기 -->
	<select id="getBarcodeListDao"
		resultType="String">
		select p_barcode
		  from p_count
		 where p_sold = 'N'
		   and p_num = #{param1}
	</select>
	
	<!-- 바코드 번호 추가 -->
	<insert id="addBarcodeDao">
		insert into p_count (p_num, p_barcode)
		values (#{param1}, #{param2})
	</insert>
	
	<!-- 판매 목록 페이징 -->
	<select id="articleSPageDao" resultType="_int">
		select count(*) as total from order_info
		 <if test="tab == 'tab1'">
		 where m_payment = '상품준비중'
		 </if>
		 <if test="tab == 'tab2'">
 		 where m_payment = '배송준비중'
 		 </if>
 		 <if test="tab == 'tab3'">
  		 where m_payment = '배송중'
  		 </if>
  		 <if test="tab == 'tab4'">
  		 where m_payment = '판매완료'
  		 </if>
  		 <if test="searchField != null and searchField != '' and tab != 'tab5'">
		 	and upper(${searchField}) like '%${searchWord.toUpperCase()}%'
		 </if>
		 <if test="tab == 'tab5' and searchField != '' and searchField != null">
			where upper(${searchField}) like '%${searchWord.toUpperCase()}%'
		 </if>
	</select>
	
	<!-- 판매 목록 -->
	<select id="searchSlistDao" resultType="com.project.springboot.productdto.OrderinfoDTO">
		select * 
		  from (
		  		select rownum num, A.*
		  		  from (
		  		  		select *
		  		  		  from order_info
		  		  		 <if test="tab == 'tab1'">
		  		  		 where m_payment = '상품준비중'
		  		  		 </if>
		  		  		 <if test="tab == 'tab2'">
		  		  		 where m_payment = '배송준비중'
		  		  		 </if>
		  		  		 <if test="tab == 'tab3'">
		  		  		 where m_payment = '배송중'
		  		  		 </if>
		  		  		 <if test="tab == 'tab4'">
		  		  		 where m_payment = '판매완료'
		  		  		 </if>
		  		  		 <if test="searchField != null and searchField != '' and tab != 'tab5'">
						 	and upper(${searchField}) like '%${searchWord.toUpperCase()}%'
						 </if>
						 <if test="tab == 'tab5' and searchField != '' and searchField != null">
							where upper(${searchField}) like '%${searchWord.toUpperCase()}%'
						 </if>
		  		  		 order by m_num desc
		  		  		) A
		  		  where rownum <![CDATA[<=]]> #{nEnd} ) B
		  where B.num <![CDATA[>=]]> #{nStart}
	</select>
	
	<!-- 상품 상세 정보 가져오기 -->
	<select id="getBOrderDao" resultType="com.project.springboot.productdto.BOrderinfoDTO">
		select * from b_orderinfo
	</select>
	
	<!-- 재고 상태 변경 -->
	<update id="updateBarcodeDao">
		update p_count
		   set p_sold = 'Y'
		 where p_barcode = #{barcode}
	</update>
	
	<!-- 상품 판매 정보 입력 -->
	<insert id="insertSoldInfoDao">
		insert into p_soldinfo (m_num, p_num, p_barcode) 
		values (#{m_num}, #{p_num}, #{barcode})
	</insert>
	
	<!-- 주문 상태 배송준비중 변경 -->
	<update id="updateOrderDao">
		update order_info
		   set m_payment = '배송준비중'
		 where m_num = #{m_num}
	</update>
	
	<!-- 주문 상태 배송중, 판매완료 변경 -->
	<update id="updateOrderinfoDao">
		update order_info
		   <if test="status == '배송준비중'">
		   set m_payment = '배송중'
		   </if>
		   <if test="status == '배송중'">
		   set m_payment = '판매완료'
		   </if>
		 where m_num = #{m_num}
	</update>
	
	<!-- 주문 상태 배송중 변경 -->
	
	<!-- 주문 상태 판매완료 변경 -->
	
	<!-- 상품 판매 정보 가져오기 -->
	<select id="getSoldInfoDao" resultType="com.project.springboot.productdto.PSoldInfoDTO">
		select * from p_soldinfo
	</select>
</mapper>