<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.project.springboot.pservice.PListDao">
	<!-- 페이지설정 -->
	<select id="articlePageDao" resultType="_int">
		select count(*) as total from product_list
		 <if test="sField != 'p_price' and sField != null and sWord != null and sField != '' and sWord != '' and type == 'select'">
		 	where ${sField} = #{sWord}
		 </if>
		 <if test="sField != 'p_price' and sField != null and sField != '' and sWord != '' and sWord != '' and type == 'search'">
          	where upper(${sField}) like '%${sWord.toUpperCase()}%'
         </if>
         <if test="sField == 'p_price' and sWord == '500001'">
         	where ${sField} <![CDATA[<]]> 500000
        	<if test="selected != '' and selected != null">
          	  and p_company = #{selected}
            </if>
         </if>
         <if test="sField == 'p_price' and sWord == '500000' or sWord == '1000000' or sWord == '1500000'">
         	where ${sField} between ${sWord} and ${sWord} + 500000
       		<if test="selected != '' and selected != null">
         	  and p_company = #{selected}
         	</if>
         </if>
         <if test="sField == 'p_price' and sWord == '2000000' or sWord == '3000000' or sWord == '4000000'">
         	where ${sField} between ${sWord} and ${sWord} + 1000000
       		<if test="selected != '' and selected != null">
         	  and p_company = #{selected}
         	</if>
         </if>
         <if test="sField == 'p_price' and sWord == '5000000'">
         	where ${sField} <![CDATA[>=]]> 5000000
        	<if test="selected != '' and selected != null">
          	  and p_company = #{selected}
            </if>
         </if>
	</select>
	
	<!-- 리스트뷰 -->
	<select id="listDao" resultType="com.project.springboot.productdto.ProductlistDTO">
		select *
		  from (
		  		select rownum num, A.*
		  		  from (
		  		        select *
		  		          from product_list
		  		          <if test="sField == 'p_price' and sWord == '500001'">
		  		          	where ${sField} <![CDATA[<]]> 500000
		  		          	<if test="selected != '' and selected != null">
		  		          	  and p_company = #{selected}
		  		          	</if>
		  		          	order by ${sField}
		  		          </if>
		  		          <if test="sField == 'p_price' and sWord == '500000' or sWord == '1000000' or sWord == '1500000'">
		  		          	where ${sField} between ${sWord} and ${sWord} + 500000
	  		          		<if test="selected != '' and selected != null">
				          	  and p_company = #{selected}
				          	</if>
					        order by ${sField}
		  		          </if>
		  		          <if test="sField == 'p_price' and sWord == '2000000' or sWord == '3000000' or sWord == '4000000'">
		  		          	where ${sField} between ${sWord} and ${sWord} + 1000000
	  		          		<if test="selected != '' and selected != null">
				          	  and p_company = #{selected}
				          	</if>
					        order by ${sField}
		  		          </if>
		  		          <if test="sField == 'p_price' and sWord == '5000000'">
		  		          	where ${sField} <![CDATA[>=]]> 5000000
	  		          		<if test="selected != '' and selected != null">
				          	  and p_company = #{selected}
				          	</if>
					        order by ${sField}
		  		          </if>
		  		          <if test="sField != 'p_price' and sField != null and sWord != null and sField != '' and sWord != '' and type == 'select'">
		  		           	where ${sField} = #{sWord}
		  		          </if>
		  		          <if test="sField != 'p_price' and sField != null and sField != '' and sField != '' and sWord != '' and type == 'search'">
		  		          	where upper(${sField}) like '%${sWord.toUpperCase()}%'
		  		          </if>
		  		         ) A
		  		  where rownum <![CDATA[<=]]> #{nEnd} ) B
		  where B.num <![CDATA[>=]]> #{nStart}
	</select>
	
	<!-- 상품 재고 업데이트 -->
	
	<!-- 상품 상세 페이지 -->
	<select id="viewpinfoDao" 
		parameterType="int"
		resultType="com.project.springboot.productdto.ProductinfoDTO">
		select f.*, l.p_price, l.p_rdate, l.p_rating, l.p_listimg, l.p_count
		  from product_info f, product_list l
		 where f.p_num = l.p_num
		   and f.p_num = #{param1}
	</select>
	
	<!-- 구매 확인 -->
	<select id="buyCheckDao1"
		resultType="String">
		select u_id
		  from order_info 
		 where p_num = #{param1}
	</select>
	
	<!-- 구매 확인 -->
	<select id="buyCheckDao2"
		resultType="String">
		select u_id
		  from b_orderinfo 
		 where p_num = #{param1}
	</select>
	
	<!-- 상품 검색 자동완성 -->
	<select id="wordSearchShowDao" parameterType="HashMap" resultType="String">
		<choose>
    		<when test="searchfield eq 'p_name'">
    			select p_name
    			from(
    			select rownum as rnum, p_name
				from(
					select distinct p_name
					from product_list
					where p_name like '%${searchword.toUpperCase()}%'
				)
				where rownum <![CDATA[<]]> 6
				)
    		</when>
    		<otherwise>
    			select ${searchfield} 
				from(
					select ROWNUM as rnum, ${searchfield}
					from (
					select distinct ${searchfield}
					from product_list
					where ${searchfield} like '%${searchword.toUpperCase()}%'
					)
				)
				where rownum <![CDATA[<]]> 6
    		</otherwise>
    	</choose>   
	</select>
	
	<!-- 단품 결제 정보 입력 -->
	<insert id="insertOrderDao"
		parameterType="com.project.springboot.productdto.OrderinfoDTO">
		insert into order_info (m_num, u_id, m_addr, p_num, m_price, m_qty, p_name, p_price) 
		values (seq_o_num.nextval, #{u_id}, #{m_addr}, ${p_num}, ${m_price}, ${m_qty}, #{p_name}, #{p_price})
	</insert>
	
	<!-- 장바구니 추가 -->
	<insert id="add_bascketDao"
		parameterType="com.project.springboot.productdto.ProductBascketDTO">
		insert into p_bascket
		values (basc_b_num_seq.nextval, #{u_id}, #{p_num}, #{m_qty}, #{p_name}, #{p_listimg}, #{m_price}, #{p_price})
	</insert>
	
	<!-- 장바구니 목록 가져오기 -->
	<select id="get_bascketListDao"
		resultType="com.project.springboot.productdto.ProductBascketDTO">
		select * from p_bascket
		 where u_id = #{param1}
	</select>
	
	<!-- 장바구니 개별 삭제 -->
	<delete id="deleteBascketDao">
		delete from p_bascket
		 where b_num = #{param1}
	</delete>
	
	<!-- 장바구니 결제 상세 O_Num 확인 -->
	<select id="checkO_NumDao"
		resultType="String">
		select *
		  from (
		        select o_num from bascket_order
		         where u_id = #{param1}
		         order by o_num desc
		        )
		where rownum = 1
	</select>
	
	<!-- 장바구니 결제 -->
	<insert id="insertBOrderDao"
		parameterType="com.project.springboot.productdto.BascketOrderDTO">
		insert into bascket_order (o_num, u_id, o_addr, o_price, o_qty)
		values (bOrder_seq.nextval, #{u_id}, #{o_addr}, ${o_price}, ${o_qty})
	</insert>
	
	<!-- 장바구니 결제 상세 -->
	<insert id="insertBOinfoDao">
		insert into b_orderinfo
		values (#{o_num}, #{u_id}, #{p_num}, #{p_name}, #{p_price}, #{bo_qty})
	</insert>
	
	<!-- 장바구니 결제 후 장바구니 삭제 -->
	<delete id="deleteABascketDao">
		delete from p_bascket
		 where u_id = #{param1}
	</delete>
	
	<!-- 구매 후 SCount 증가 -->
	<update id="update_SCountDao">
		update product_list
		   set p_scount = p_scount + 1
		 where p_num = #{param1}
	</update>
	
	<insert id="insertReviewDao"
		parameterType="com.project.springboot.productdto.ReviewDTO">
		insert into p_review (r_num, p_num, u_id, p_content, r_rating)
		values (r_num_seq.nextval, #{p_num}, #{u_id}, #{p_content}, #{r_rating})
	</insert>
	
	<insert id="insertRImgDao"
		parameterType="com.project.springboot.productdto.ReviewImageDTO">
		insert into p_revImage (r_num, p_num, r_ofile, r_sfile)
		values (#{r_num}, #{p_num},#{r_ofile}, #{r_sfile})	
	</insert>
	
	<select id="checkRnumDao"
		resultType="int">
		select r_num from p_review
		 where p_num = #{param1}
		   and u_id = #{param2}	
	</select>
	
	<select id="getReviewDao"
		resultType="com.project.springboot.productdto.ReviewDTO">
		select * from p_review where p_num = #{param1}
	</select>
	
	<select id="getRevImgDao"
		resultType="com.project.springboot.productdto.ReviewImageDTO">
		select r_num, r_sfile from p_revImage
		 where p_num = #{param1}
	</select>
</mapper>